/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MYSLIDERBASE_HPP
#define MYSLIDERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>

class mySliderBase : public touchgfx::Container
{
public:
    mySliderBase();
    virtual ~mySliderBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setTriggerValidatedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->triggerValidatedCallback = &callback;
    }

    /*
     * Custom Actions
     */
    virtual void actionValidated();
    virtual void actionFailed();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTriggerValidatedCallback()
    {
        if (triggerValidatedCallback && triggerValidatedCallback->isValid())
        {
            this->triggerValidatedCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::Image image1;
    touchgfx::Container container1;
    touchgfx::Circle circle1;
    touchgfx::PainterRGB565 circle1Painter;
    touchgfx::FadeAnimator< touchgfx::ScalableImage > arrow;
    touchgfx::FadeAnimator< touchgfx::ScalableImage > check;
    touchgfx::FadeAnimator< touchgfx::TextArea > textSlidehere;
    touchgfx::FadeAnimator< touchgfx::TextArea > textConfirmed;

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* triggerValidatedCallback;

};

#endif // MYSLIDERBASE_HPP
