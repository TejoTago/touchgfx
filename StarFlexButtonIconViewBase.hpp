/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef STARFLEXBUTTONICONVIEWBASE_HPP
#define STARFLEXBUTTONICONVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/starflexbuttonicon_screen/StarFlexButtonIconPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class StarFlexButtonIconViewBase : public touchgfx::View<StarFlexButtonIconPresenter>
{
public:
    StarFlexButtonIconViewBase();
    virtual ~StarFlexButtonIconViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void action1()
    {
        // Override and implement this function in Screen1
    }
    

    /*
     * Virtual Action Handlers
     */
    virtual void updateRating()
    {
        // Override and implement this function in StarFlexButtonIcon
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage scalableImage1;
    touchgfx::Container container1;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::TextArea textArea1_1;
    touchgfx::IconButtonStyle< touchgfx::ToggleButtonTrigger >  star1;
    touchgfx::IconButtonStyle< touchgfx::ToggleButtonTrigger >  star2;
    touchgfx::IconButtonStyle< touchgfx::ToggleButtonTrigger >  star3;
    touchgfx::IconButtonStyle< touchgfx::ToggleButtonTrigger >  star4;
    touchgfx::IconButtonStyle< touchgfx::ToggleButtonTrigger >  star5;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<StarFlexButtonIconViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // STARFLEXBUTTONICONVIEWBASE_HPP
