/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/moveandfade_screen/MoveAndFadeViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

MoveAndFadeViewBase::MoveAndFadeViewBase() :
    flexButtonCallback(this, &MoveAndFadeViewBase::flexButtonCallbackHandler),
    i_Wifi_ONEndedCallback(this, &MoveAndFadeViewBase::i_Wifi_ONEndedCallbackHandler),
    i_Wifi_OFFEndedCallback(this, &MoveAndFadeViewBase::i_Wifi_OFFEndedCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_BACKGROUNDS_480X272_CARBON_ID));
    background.setPosition(0, 0, 480, 272);
    background.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(background);

    cLights.setPosition(196, 180, 157, 49);
    lineLights.setPosition(17, 0, 69, 43);
    lineLightsPainter.setColor(touchgfx::Color::getColorFromRGB(94, 217, 219));
    lineLights.setPainter(lineLightsPainter);
    lineLights.setStart(0, 20);
    lineLights.setEnd(40, 20);
    lineLights.setLineWidth(10);
    lineLights.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    lineLights.setAlpha(200);
    cLights.add(lineLights);

    circleLights.setPosition(0, 0, 35, 36);
    circleLights.setCenter(15, 20);
    circleLights.setRadius(12);
    circleLights.setLineWidth(0);
    circleLights.setArc(0, 360);
    circleLightsPainter.setColor(touchgfx::Color::getColorFromRGB(94, 217, 219));
    circleLights.setPainter(circleLightsPainter);
    cLights.add(circleLights);

    lights.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_WB_SUNNY_30_30_FCE303_SVG_ID));
    lights.setPosition(96, 0, 40, 40);
    lights.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    lights.setAlpha(0);
    cLights.add(lights);

    flexButtonLightsTurnUp.setBoxWithBorderPosition(0, 0, 0, 0);
    flexButtonLightsTurnUp.setBorderSize(5);
    flexButtonLightsTurnUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonLightsTurnUp.setPosition(0, 1, 40, 40);
    cLights.add(flexButtonLightsTurnUp);

    flexButtonLightsDim.setBoxWithBorderPosition(0, 0, 0, 0);
    flexButtonLightsDim.setBorderSize(5);
    flexButtonLightsDim.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonLightsDim.setPosition(39, 0, 40, 40);
    cLights.add(flexButtonLightsDim);

    add(cLights);

    cVolume.setPosition(196, 130, 149, 50);
    lineVolume.setPosition(17, 3, 69, 43);
    lineVolumePainter.setColor(touchgfx::Color::getColorFromRGB(94, 217, 219));
    lineVolume.setPainter(lineVolumePainter);
    lineVolume.setStart(0, 20);
    lineVolume.setEnd(40, 20);
    lineVolume.setLineWidth(10);
    lineVolume.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    lineVolume.setAlpha(200);
    cVolume.add(lineVolume);

    circleVolume.setPosition(0, 3, 35, 36);
    circleVolume.setCenter(15, 20);
    circleVolume.setRadius(12);
    circleVolume.setLineWidth(0);
    circleVolume.setArc(0, 360);
    circleVolumePainter.setColor(touchgfx::Color::getColorFromRGB(94, 217, 219));
    circleVolume.setPainter(circleVolumePainter);
    cVolume.add(circleVolume);

    volumeOFF.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_VOLUME_OFF_30_30_36FA05_SVG_ID));
    volumeOFF.setPosition(96, 4, 40, 40);
    volumeOFF.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    volumeOFF.setAlpha(142);
    cVolume.add(volumeOFF);

    volumeON.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_AV_VOLUME_UP_30_30_36FA05_SVG_ID));
    volumeON.setPosition(96, 4, 40, 40);
    volumeON.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    volumeON.setAlpha(142);
    volumeON.setVisible(false);
    cVolume.add(volumeON);

    flexButtonVolumeON.setBoxWithBorderPosition(0, 0, 0, 0);
    flexButtonVolumeON.setBorderSize(5);
    flexButtonVolumeON.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonVolumeON.setAction(flexButtonCallback);
    flexButtonVolumeON.setPosition(-3, 3, 40, 40);
    cVolume.add(flexButtonVolumeON);

    flexButtonVolumeOFF.setBoxWithBorderPosition(0, 0, 0, 0);
    flexButtonVolumeOFF.setBorderSize(5);
    flexButtonVolumeOFF.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonVolumeOFF.setAction(flexButtonCallback);
    flexButtonVolumeOFF.setPosition(39, 3, 40, 40);
    cVolume.add(flexButtonVolumeOFF);

    add(cVolume);

    cWifi.setPosition(188, 81, 157, 49);
    lineWifi.setPosition(25, 6, 69, 43);
    lineWifiPainter.setColor(touchgfx::Color::getColorFromRGB(94, 217, 219));
    lineWifi.setPainter(lineWifiPainter);
    lineWifi.setStart(0, 20);
    lineWifi.setEnd(40, 20);
    lineWifi.setLineWidth(10);
    lineWifi.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    lineWifi.setAlpha(200);
    cWifi.add(lineWifi);

    circleWifi.setPosition(8, 6, 35, 36);
    circleWifi.setCenter(15, 20);
    circleWifi.setRadius(12);
    circleWifi.setLineWidth(0);
    circleWifi.setArc(0, 360);
    circleWifiPainter.setColor(touchgfx::Color::getColorFromRGB(94, 217, 219));
    circleWifi.setPainter(circleWifiPainter);
    cWifi.add(circleWifi);

    wifiOFF.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NOTIFICATION_WIFI_OFF_30_30_7477E3_SVG_ID));
    wifiOFF.setPosition(104, 9, 40, 40);
    wifiOFF.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    cWifi.add(wifiOFF);

    wifiON.setBitmap(touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NOTIFICATION_WIFI_30_30_7477E3_SVG_ID));
    wifiON.setPosition(104, 9, 40, 40);
    wifiON.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    wifiON.setVisible(false);
    cWifi.add(wifiON);

    flexButtonWifiON.setBoxWithBorderPosition(0, 0, 0, 0);
    flexButtonWifiON.setBorderSize(5);
    flexButtonWifiON.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonWifiON.setAction(flexButtonCallback);
    flexButtonWifiON.setPosition(3, 6, 40, 40);
    cWifi.add(flexButtonWifiON);

    flexButtonWifiOFF.setBoxWithBorderPosition(0, 0, 0, 0);
    flexButtonWifiOFF.setBorderSize(5);
    flexButtonWifiOFF.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    flexButtonWifiOFF.setAction(flexButtonCallback);
    flexButtonWifiOFF.setPosition(47, 6, 40, 40);
    cWifi.add(flexButtonWifiOFF);

    add(cWifi);

    cScreen.setPosition(0, 0, 480, 50);
    lineScreenTop.setPosition(0, 0, 480, 50);
    lineScreenTopPainter.setColor(touchgfx::Color::getColorFromRGB(94, 217, 219));
    lineScreenTop.setPainter(lineScreenTopPainter);
    lineScreenTop.setStart(0, 20);
    lineScreenTop.setEnd(480, 20);
    lineScreenTop.setLineWidth(3);
    lineScreenTop.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    lineScreenTop.setAlpha(200);
    cScreen.add(lineScreenTop);

    circleScreen.setPosition(0, 0, 35, 36);
    circleScreen.setCenter(15, 20);
    circleScreen.setRadius(2);
    circleScreen.setLineWidth(0);
    circleScreen.setArc(0, 360);
    circleScreenPainter.setColor(touchgfx::Color::getColorFromRGB(181, 232, 232));
    circleScreen.setPainter(circleScreenPainter);
    cScreen.add(circleScreen);

    add(cScreen);

    lineScreenBottom.setPosition(0, 229, 480, 50);
    lineScreenBottomPainter.setColor(touchgfx::Color::getColorFromRGB(94, 217, 219));
    lineScreenBottom.setPainter(lineScreenBottomPainter);
    lineScreenBottom.setStart(0, 20);
    lineScreenBottom.setEnd(480, 20);
    lineScreenBottom.setLineWidth(3);
    lineScreenBottom.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    lineScreenBottom.setAlpha(0);
    add(lineScreenBottom);
}

MoveAndFadeViewBase::~MoveAndFadeViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MoveAndFadeViewBase::setupScreen()
{

}

void MoveAndFadeViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonWifiON)
    {
        //I_Wifi_ON
        //When flexButtonWifiON clicked move circleWifi
        //Move circleWifi to x:47, y:6 with LinearIn easing in 100 ms (6 Ticks)
        circleWifi.clearMoveAnimationEndedAction();
        circleWifi.startMoveAnimation(47, 6, 6, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
        circleWifi.setMoveAnimationEndedAction(i_Wifi_ONEndedCallback);
    }
    if (&src == &flexButtonWifiOFF)
    {
        //I_Wifi_OFF
        //When flexButtonWifiOFF clicked move circleWifi
        //Move circleWifi to x:8, y:6 with LinearIn easing in 100 ms (6 Ticks)
        circleWifi.clearMoveAnimationEndedAction();
        circleWifi.startMoveAnimation(8, 6, 6, touchgfx::EasingEquations::linearEaseIn, touchgfx::EasingEquations::linearEaseIn);
        circleWifi.setMoveAnimationEndedAction(i_Wifi_OFFEndedCallback);
    }
    if (&src == &flexButtonVolumeON)
    {
        //I_Volume_ON
        //When flexButtonVolumeON clicked call virtual function
        //Call volumeControlOn
        volumeControlOn();
    }
    if (&src == &flexButtonVolumeOFF)
    {
        //I_Volume_OFF
        //When flexButtonVolumeOFF clicked call virtual function
        //Call volumeControlOff
        volumeControlOff();
    }
}

void MoveAndFadeViewBase::i_Wifi_ONEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Circle>& comp)
{
    //I_Wifi_ONHide
    //When I_Wifi_ON completed hide wifiOFF
    //Hide wifiOFF
    wifiOFF.setVisible(false);
    wifiOFF.invalidate();


    //I_Wifi_ON_Show
    //When I_Wifi_ON completed show wifiON
    //Show wifiON
    wifiON.setVisible(true);
    wifiON.invalidate();

}

void MoveAndFadeViewBase::i_Wifi_OFFEndedCallbackHandler(const touchgfx::MoveAnimator<touchgfx::Circle>& comp)
{
    //I_Wifi_OFF_Hide
    //When I_Wifi_OFF completed hide wifiON
    //Hide wifiON
    wifiON.setVisible(false);
    wifiON.invalidate();


    //I_Wifi_OFF_Show
    //When I_Wifi_OFF completed show wifiOFF
    //Show wifiOFF
    wifiOFF.setVisible(true);
    wifiOFF.invalidate();

}
